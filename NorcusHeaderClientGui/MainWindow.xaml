<Window x:Class="NorcusSetClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:NorcusSetClient"
        mc:Ignorable="d"
        Title="NORCUS Set Client 1.0" Height="300" Width="150" 
        x:Name="NorcusWindow"
        Closing="NorcusWindow_Closing" 
        WindowStyle="ToolWindow" 
        Topmost="{Binding AlwaysOnTop}">
    <Window.DataContext>
        <local:NorcusClientViewModel/>
    </Window.DataContext>
    <Window.Resources>
        <local:IntToBoolConverter x:Key="IntToBoolConverter"/>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
        <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
        <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>
        <Style x:Key="ListBoxItemStyle1" TargetType="{x:Type ListBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,1"/>
            <Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="Transparent"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Focusable" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBoxItem}">
                        <Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--<MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsMouseOver" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.MouseOver.Border}"/>
                            </MultiTrigger>-->
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedInactive.Border}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </MultiTrigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                    <Condition Property="IsSelected" Value="True"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource Item.SelectedActive.Border}"/>
                                <Setter Property="FontWeight" Value="Bold"/>
                            </MultiTrigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Window.ContextMenu>
        <ContextMenu>
            <MenuItem Header="Velikost písma">
                <MenuItem 
                    Header="12" 
                    Command="{Binding FontCommand}" CommandParameter="12"
                    IsChecked="{Binding FontSize, Converter={StaticResource IntToBoolConverter}, ConverterParameter=12, Mode=OneWay}"/>
                <MenuItem 
                    Header="14"
                    Command="{Binding FontCommand}" CommandParameter="14"
                    IsChecked="{Binding FontSize, Converter={StaticResource IntToBoolConverter}, ConverterParameter=14, Mode=OneWay}"/>
                <MenuItem 
                    Header="16" 
                    Command="{Binding FontCommand}" CommandParameter="16"
                    IsChecked="{Binding FontSize, Converter={StaticResource IntToBoolConverter}, ConverterParameter=16, Mode=OneWay}"/>
                <MenuItem 
                    Header="20" 
                    Command="{Binding FontCommand}" CommandParameter="20"
                    IsChecked="{Binding FontSize, Converter={StaticResource IntToBoolConverter}, ConverterParameter=20, Mode=OneWay}"/>
                <MenuItem 
                    Header="24" 
                    Command="{Binding FontCommand}" CommandParameter="24"
                    IsChecked="{Binding FontSize, Converter={StaticResource IntToBoolConverter}, ConverterParameter=24, Mode=OneWay}"/>
            </MenuItem>
            <Separator/>
            <MenuItem Header="Zobrazení:" IsEnabled="False"/>
            <MenuItem Header="Vždy navrchu" IsCheckable="True" IsChecked="{Binding AlwaysOnTop}"/>
            <Separator/>
            <MenuItem Header="Restarovat klienta" Command="{Binding RestartCommand}"/>
            <MenuItem Header="Nastavení" Click="SettingsMenuItem_Click"/>
        </ContextMenu>
    </Window.ContextMenu>
    <Grid>
        <ListBox ItemsSource="{Binding SetList}"
                 SelectedIndex="{Binding SongIndex, Mode=OneWay}"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 IsHitTestVisible="True"
                 FontSize="{Binding FontSize}"
                 x:Name="SetListBox" 
                 ItemContainerStyle="{DynamicResource ListBoxItemStyle1}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <TextBlock Text="{Binding}" TextWrapping="Wrap"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Window>
